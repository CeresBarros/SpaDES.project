% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/project-template.R
\name{newProject}
\alias{newProject}
\title{Create new SpaDES project}
\usage{
newProject(
  name,
  path = ".",
  type = "basic",
  open = interactive(),
  modules = NULL,
  ...
)
}
\arguments{
\item{name}{project name (name of project directory)}

\item{path}{path to directory in which to create the project directory}

\item{type}{character string giving the project type. Possible values include:
\code{"basic"} (default), and \code{"advanced"}.}

\item{open}{Logical. Should the new project file be opened after creation?
Default \code{TRUE} in an interactive session.}

\item{modules}{A character vector of modules to download and put into the project
(see \code{SpaDES.install::getModule} for how to specify)}

\item{...}{Additional arguments. Currently only the following are implemented:
\describe{
\item{\code{overwrite}}{
If modules are specified, should a new module be downloaded even
if it already exists, i.e., overwrite (and destroy) the existing one.
Default is \code{FALSE}
}
\item{\code{pkgPath}}{
Path to project's package directory.
Defaults to \file{<projectName>_packages} in the project's parent directory.
}
}}
}
\description{
Initialize a project with subdirectories \file{cache/}, \file{modules/},
\file{inputs/}, \file{outputs/}, and \code{setPaths} accordingly.
If invoked from Rstudio, will also create a new Rstudio project file.
}
\details{
This extends the basic SpaDES project template provided by \pkg{SpaDES.core}.
}
\examples{
\dontrun{
## use basic project template
myProjDir <- newProject("myProject", tempdir())

## use advanced project setup
myAdvProjDir <- newProject("myAdvProject", tempdir(), type = "advanced")
}
}
